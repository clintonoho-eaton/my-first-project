name: Pack, Deploy, Trigger, and Undeploy Azure Function App

on:
  workflow_dispatch:

jobs:
  pack-deploy-trigger-undeploy:
    name: Pack Deploy Trigger and Undeploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function-app-name: [IotHubCapcityExporter]
        function-app-path: [IotHubCapcityExporter]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x' # Adjust the version as needed

    - name: Install dependencies
      run: dotnet restore ${{ matrix.function-app-path }}

    - name: Build project
      run: dotnet build --configuration Release --no-restore ${{ matrix.function-app-path }}

    - name: Publish project
      run: dotnet publish --configuration Release --output ./publish ${{ matrix.function-app-path }}

    - name: Zip published project
      run: zip -r functionapp.zip ./publish

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Deploy Azure Function App
    #   run: |
    #     az functionapp deployment source config-zip \
    #       --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
    #       --name ${{ secrets.AZURE_FUNCTION_APP_NAME }} \
    #       --src functionapp.zip

    - name: Deploy to Azure Function App
      uses: azure/functions-action@v1
      with:
        app-name: ${{ matrix.function-app-name }}
        package: './publish'
        publish-profile: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: AZURE_RESOURCE_GROUP

    - name: Get Access Token
      id: get_token
      run: |
        AZURE_ACCESS_TOKEN=$(az account get-access-token --resource=https://management.azure.com --query accessToken --output tsv)
        echo "::set-output name=token::$AZURE_ACCESS_TOKEN"

    - name: Trigger Azure Function App
      uses: actions/github-script@v5
      env:
        FUNCTION_APP_NAME: ${{ secrets.AZURE_FUNCTION_APP_NAME }}
        ACCESS_TOKEN: ${{ steps.get_token.outputs.token }}
      with:
        script: |
          const response = await fetch(`https://${{ env.FUNCTION_APP_NAME }}.azurewebsites.net/api/${{ env.FUNCTION_APP_NAME }}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${{ env.ACCESS_TOKEN }}`
            }
          });

          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

    # - name: Trigger Azure Function App
    #   run: |
    #     curl -X POST "https://${{ secrets.AZURE_FUNCTION_APP_NAME }}.azurewebsites.net/api/<function-name>?code=${{ secrets.FUNCTION_KEY }}" \
    #     -H "Content-Type: application/json" \
    #     -d '{
    #           "client_id": "${{ secrets.AZURE_CLIENT_ID }}",
    #           "client_secret": "${{ secrets.AZURE_CLIENT_SECRET }}",
    #           "tenant_id": "${{ secrets.AZURE_TENANT_ID }}"
    #         }'

    - name: Wait for Function App processing
      run: sleep 120 # Adjust the sleep time as needed

    - name: Undeploy Azure Function App
      run: |
        az functionapp delete \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name ${{ secrets.AZURE_FUNCTION_APP_NAME }}
