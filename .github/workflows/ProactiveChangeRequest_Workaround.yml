name: Proactive Change Management

on:
  workflow_dispatch:
    inputs:
      servicenow_instance:
        description: 'ServiceNow instance'
        required: true
        type: string
      microservice_name:
        description: 'Name of your service'
        type: string
      RESOURCE_GROUP:
        description: 'Azure Resource Group Name'
        type: string
      aks_cluster_name:
        description: 'AKS Cluster Name'
        type: string
      aks_resource_group:
        description: 'AKS Resource Group'
        type: string
      aks_credentials:
        description: 'AKS Credential'
        type: string
      change_model:
        description: 'Change model sys_id'
        required: true
        type: string
      assign_group:
        description: 'ServiceNow assignment group'
        required: true
        type: string

jobs:
  change-request:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "SERVICENOW_INSTANCE=${{ github.event.inputs.servicenow_instance }}" >> $GITHUB_ENV
          echo "CHANGE_MODEL=${{ github.event.inputs.change_model }}" >> $GITHUB_ENV

      - name: Get microservice name (parent folder name)
        id: get_service_name
        run: echo "::set-output name=service_name::$(basename $(pwd))"

      - name: Get First Member of Assignment Group
        id: get_assigned_to
        run: |
          SN_INSTANCE="${{ env.SERVICENOW_INSTANCE }}.service-now.com"
          ASSIGNMENT_GROUP="${{ github.event.inputs.assign_group }}"
          group_members=$(curl -s -X GET             "https://$SN_INSTANCE/api/now/table/sys_user_grmember?sysparm_query=group=$ASSIGNMENT_GROUP"             --user ${{ secrets.SERVICENOW_USER }}:${{ secrets.SERVICENOW_PASSWORD }}             --header "Content-Type: application/json")
          assigned_to=$(echo $group_members | jq -r '.result[0].user.value')
          if [ -z "$assigned_to" ] || [ "$assigned_to" == "null" ]; then
            echo "Error: No members found in the assignment group."
            exit 1
          else
            echo "::set-output name=assigned_to::$assigned_to"
          fi

      - name: Create Normal Change Request in ServiceNow (workaround)
        id: create_change
        run: |
          SN_INSTANCE="${{ env.SERVICENOW_INSTANCE }}.service-now.com"
          SERVICE_NAME="${{ steps.get_service_name.outputs.service_name }}"
          PLANNED_START=$(date +"%Y-%m-%d %H:%M:%S")
          PLANNED_END=$(date -d "$PLANNED_START + 1 hour" +"%Y-%m-%d %H:%M:%S")
          ASSIGNED_TO="${{ steps.get_assigned_to.outputs.assigned_to }}"
          json_payload=$(jq -n             --arg short_description "Deploy $SERVICE_NAME microservice to AKS"             --arg description "Normal change for deploying $SERVICE_NAME microservice to AKS."             --arg category "Software"             --arg type "normal"             --arg planned_start "$PLANNED_START"             --arg planned_end "$PLANNED_END"             --arg assigned_to "$ASSIGNED_TO"             '{
              short_description: $short_description,
              description: $description,
              category: $category,
              type: $type,
              planned_start_date: $planned_start,
              planned_end_date: $planned_end,
              assigned_to: $assigned_to
            }')
          change_request=$(curl -s -X POST             "https://$SN_INSTANCE/api/now/table/change_request"             --user ${{ secrets.SERVICENOW_USER }}:${{ secrets.SERVICENOW_PASSWORD }}             --header "Content-Type: application/json"             --data "$json_payload")
          change_number=$(echo $change_request | jq -r '.result.number')
          change_sys_id=$(echo $change_request | jq -r '.result.sys_id')
          if [ "$change_number" == "null" ] || [ -z "$change_number" ]; then
            echo "Error: Failed to create change request. Response: $change_request"
            exit 1
          else
            echo "Successfully created change request: $change_number"
            echo "change_number=$change_number" >> $GITHUB_OUTPUT
            echo "change_sys_id=$change_sys_id" >> $GITHUB_OUTPUT
          fi
